#!/bin/bash

function usage {
  echo "Usage: memtracer [-o <output-file>] [-s <control-start>] [-e <control-end>] <application> <application-args>" >&2 ;
} 
function exit_error {
  usage
  exit 1
}

output="tracer.out"
while getopts "s:e:o:h" opt; do
  case $opt in
    s)  control_start=$OPTARG      ;;
    e)  control_end=$OPTARG   ;;
    o)  output=$OPTARG   ;;
    h)  usage
        exit 0;;
    *)  exit_error
  esac
done
shift $(($OPTIND - 1))

if [ -z "$@" ]; then
  echo 'Missing application to be executed.' >&2
  exit_error
fi


echo "Executing application $@, writing to $output"

if [ "$control_start" = "" ] || [ "$control_end" = "" ]; then
  @PINTOOL_PATH@ -t @CMAKE_CURRENT_BINARY_DIR@/pintool/obj-intel64/memtracer.so -o ${output} -- "$@"
else
  echo "Start tracing at call to $control_start, end tracing at $control_end"
  @PINTOOL_PATH@ -t @CMAKE_CURRENT_BINARY_DIR@/pintool/obj-intel64/memtracer.so -control start:enter_func:${control_start},stop:exit_func:${control_end} -o ${output} -- "$@"
fi

